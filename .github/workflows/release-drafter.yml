name: Create Release
on:
  push:
    tags:
      - "*"  # Trigger for tag pushes
  pull_request:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Ensure full fetch including all tags

      - name: Set up GitHub CLI
        run: |
          sudo apt update
          sudo apt install gh
          gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: Debug Tags
        run: git tag --list  # Log all fetched tags

      - name: Get merged PR data
        run: |
          pr_data=$(gh pr list --state merged --base main --json title,labels)
          echo "PR Data: $pr_data"

          BUMP_TYPE="patch"  # Default version bump type

          if echo "$pr_data" | grep -iq "major"; then
            BUMP_TYPE="major"
          elif echo "$pr_data" | grep -iq "minor"; then
            BUMP_TYPE="minor"
          fi

          echo "BUMP_TYPE=$BUMP_TYPE" >> $GITHUB_ENV

      - name: Get latest tag version
        id: get_version
        run: |
          LATEST_TAG=$(git tag --sort=-v:refname | head -n 1 || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"

          VERSION=${LATEST_TAG#v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

          IFS='.' read -r major minor patch <<< "$VERSION" || echo "0.0.0"
          echo "NEXT_MAJOR=$major" >> $GITHUB_ENV
          echo "NEXT_MINOR=$minor" >> $GITHUB_ENV
          echo "NEXT_PATCH=$patch" >> $GITHUB_ENV

      - name: Increment version based on bump type
        run: |
          if [ "$BUMP_TYPE" = "major" ]; then
            NEXT_MAJOR=$((NEXT_MAJOR + 1))
            NEXT_MINOR=0
            NEXT_PATCH=0
          elif [ "$BUMP_TYPE" = "minor" ]; then
            NEXT_MINOR=$((NEXT_MINOR + 1))
            NEXT_PATCH=0
          else
            NEXT_PATCH=$((NEXT_PATCH + 1))
          fi

          echo "NEXT_MAJOR=$NEXT_MAJOR" >> $GITHUB_ENV
          echo "NEXT_MINOR=$NEXT_MINOR" >> $GITHUB_ENV
          echo "NEXT_PATCH=$NEXT_PATCH"

      - name: Create Release
        if: github.event_name == 'push'
        run: |
          TAG_EXISTS=$(git tag -l "v$NEXT_MAJOR.$NEXT_MINOR.$NEXT_PATCH")

          if [ -z "$TAG_EXISTS" ]; then
            gh release create "v$NEXT_MAJOR.$NEXT_MINOR.$NEXT_PATCH" release_notes.md \
              --title "Release v$NEXT_MAJOR.$NEXT_MINOR.$NEXT_PATCH" \
              --notes-file release_notes.md
          else
            echo "Release with tag v$NEXT_MAJOR.$NEXT_MINOR.$NEXT_PATCH already exists. Skipping release creation."
          fi
        env:
          NEW_VERSION: v$NEXT_MAJOR.$NEXT_MINOR.$NEXT_PATCH
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
